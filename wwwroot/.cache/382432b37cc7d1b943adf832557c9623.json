{"id":"node_modules\\lodash-compat\\internal\\isLength.js","dependencies":[{"name":"C:\\Users\\sachabarber\\Desktop\\wwwroot\\node_modules\\lodash-compat\\package.json","includedInParent":true,"mtime":1536246903912},{"name":"C:\\Users\\sachabarber\\Desktop\\wwwroot\\package.json","includedInParent":true,"mtime":1537451935969},{"name":"C:\\Users\\sachabarber\\Desktop\\wwwroot\\.babelrc","includedInParent":true,"mtime":1536240947427}],"generated":{"js":"/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","map":{"mappings":[{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\lodash-compat\\internal\\isLength.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules\\lodash-compat\\internal\\isLength.js":"/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n"},"lineCount":21}},"hash":"d61571009a8f90a47a2baac5485c2207","cacheData":{"env":{}}}